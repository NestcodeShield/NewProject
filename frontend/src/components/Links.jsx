import { useState } from "react";
import "./Links.css";
import { Link } from "react-router-dom";
import AuthModal from "./AuthModal";

function Links() {
  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);

  const handleLogin = async ({ username, password }) => {
    try {
      const response = await fetch("http://localhost:5000/api/login", {  // –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø–æ—Ä—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±—ç–∫–µ–Ω–¥—É
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ username, password }),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.message || "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
      }

      console.log("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω:", data);
      localStorage.setItem("token", data.token);
    } catch (error) {
      console.error("üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ:", error.message);
    }
  };

  const handleRegister = async ({ username, email, password }) => {  // –ü—Ä–∏–Ω–∏–º–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    try {
      const response = await fetch("http://localhost:5000/api/register", {  
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ username, email, password }),
      });

      const data = await response.json();
      if (!response.ok) throw new Error(data.message || "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");

      console.log("‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:", data);
    } catch (error) {
      console.error("üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", error.message);
    }
  };

  return (
    <>
      <div className="Links">
        <div className="container">
          <ul className="information">
            <li>–ü—É–Ω–∫—Ç 1</li>
            <li>–ü—É–Ω–∫—Ç 2</li>
            <li>–ü—É–Ω–∫—Ç 3</li>
          </ul>
          <div className="buttons">
            <button className="log" onClick={() => setIsAuthModalOpen(true)}>
              –í—Ö–æ–¥ | –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            </button>
            <button className="announcement">
              <Link to="/announcement">–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</Link>
            </button>
          </div>
        </div>
      </div>

      <AuthModal
        isOpen={isAuthModalOpen}
        onClose={() => setIsAuthModalOpen(false)}
        onLogin={handleLogin}
        onRegister={handleRegister}
      />
    </>
  );
}

export default Links;
